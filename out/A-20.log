NEW NODE: TYPE
[  1]            TYPE: int
NEW NODE: Specifier
NEW NODE: ID
[  1]              ID: a
NEW NODE: LB
[  1]              LB: [
NEW NODE: VarDec
NEW NODE: INT
[  1]             INT: 20
NEW NODE: RB
[  1]              RB: ]
NEW NODE: VarDec
NEW NODE: LB
[  1]              LB: [
NEW NODE: INT
[  1]             INT: 20
NEW NODE: RB
[  1]              RB: ]
NEW NODE: VarDec
NEW NODE: SEMI
[  1]            SEMI: ;
NEW NODE: ExtDecList
NEW NODE: ExtDef
NEW NODE: STRUCT
[  3]          STRUCT: struct
NEW NODE: ID
[  3]              ID: Type
NEW NODE: LC
[  3]              LC: {
NEW NODE: OptTag
NEW NODE: TYPE
[  4]            TYPE: int
NEW NODE: Specifier
NEW NODE: ID
[  4]              ID: name
NEW NODE: VarDec
NEW NODE: LB
[  4]              LB: [
NEW NODE: INT
[  4]             INT: 20
NEW NODE: RB
[  4]              RB: ]
NEW NODE: VarDec
NEW NODE: SEMI
[  4]            SEMI: ;
NEW NODE: Dec
NEW NODE: DecList
NEW NODE: Def
NEW NODE: TYPE
[  5]            TYPE: int
NEW NODE: Specifier
NEW NODE: ID
[  5]              ID: hair
NEW NODE: VarDec
NEW NODE: LB
[  5]              LB: [
NEW NODE: INT
[  5]             INT: 20
NEW NODE: RB
[  5]              RB: ]
NEW NODE: VarDec
NEW NODE: SEMI
[  5]            SEMI: ;
NEW NODE: Dec
NEW NODE: DecList
NEW NODE: Def
NEW NODE: RC
[  6]              RC: }
NEW NODE: DefList
NEW NODE: DefList
NEW NODE: DefList
NEW NODE: StructSpecifier
NEW NODE: Specifier
NEW NODE: SEMI
[  6]            SEMI: ;
NEW NODE: ExtDef
NEW NODE: TYPE
[  8]            TYPE: int
NEW NODE: Specifier
NEW NODE: ID
[  8]              ID: main
NEW NODE: LP
[  8]              LP: (
NEW NODE: RP
[  8]              RP: )
NEW NODE: FunDec
NEW NODE: LC
[  8]              LC: {
NEW NODE: TYPE
[  9]            TYPE: int
NEW NODE: Specifier
NEW NODE: ID
[  9]              ID: i
NEW NODE: VarDec
NEW NODE: COMMA
[  9]           COMMA: ,
NEW NODE: Dec
NEW NODE: ID
[  9]              ID: N
NEW NODE: VarDec
NEW NODE: COMMA
[  9]           COMMA: ,
NEW NODE: Dec
NEW NODE: ID
[  9]              ID: sum
NEW NODE: VarDec
NEW NODE: SEMI
[  9]            SEMI: ;
NEW NODE: Dec
NEW NODE: DecList
NEW NODE: DecList
NEW NODE: DecList
NEW NODE: Def
NEW NODE: STRUCT
[ 10]          STRUCT: struct
NEW NODE: ID
[ 10]              ID: Type
NEW NODE: ID
[ 10]              ID: t
NEW NODE: Tag
NEW NODE: StructSpecifier
NEW NODE: Specifier
NEW NODE: VarDec
NEW NODE: SEMI
[ 10]            SEMI: ;
NEW NODE: Dec
NEW NODE: DecList
NEW NODE: Def
NEW NODE: ID
[ 11]              ID: i
NEW NODE: DefList
NEW NODE: DefList
NEW NODE: DefList
NEW NODE: ASSIGNOP
[ 11]        ASSIGNOP: =
NEW NODE: Exp
NEW NODE: INT
[ 11]             INT: 0
NEW NODE: Exp
NEW NODE: SEMI
[ 11]            SEMI: ;
NEW NODE: Exp
NEW NODE: Stmt
NEW NODE: ID
[ 12]              ID: N
NEW NODE: ASSIGNOP
[ 12]        ASSIGNOP: =
NEW NODE: Exp
NEW NODE: INT
[ 12]             INT: 10
NEW NODE: Exp
NEW NODE: SEMI
[ 12]            SEMI: ;
NEW NODE: Exp
NEW NODE: Stmt
NEW NODE: ID
[ 13]              ID: sum
NEW NODE: ASSIGNOP
[ 13]        ASSIGNOP: =
NEW NODE: Exp
NEW NODE: INT
[ 13]             INT: 0
NEW NODE: Exp
NEW NODE: SEMI
[ 13]            SEMI: ;
NEW NODE: Exp
NEW NODE: Stmt
NEW NODE: WHILE
[ 14]           WHILE: while
NEW NODE: LP
[ 14]              LP: (
NEW NODE: ID
[ 14]              ID: i
NEW NODE: RELOP
[ 14]           RELOP: <
NEW NODE: Exp
NEW NODE: ID
[ 14]              ID: N
NEW NODE: RP
[ 14]              RP: )
NEW NODE: Exp
NEW NODE: Exp
NEW NODE: LC
[ 14]              LC: {
NEW NODE: ID
[ 15]              ID: t
NEW NODE: DefList
NEW NODE: DOT
[ 15]             DOT: .
NEW NODE: Exp
NEW NODE: ID
[ 15]              ID: name
NEW NODE: Exp
NEW NODE: LB
[ 15]              LB: [
NEW NODE: ID
[ 15]              ID: i
NEW NODE: RB
[ 15]              RB: ]
NEW NODE: Exp
NEW NODE: Exp
NEW NODE: ASSIGNOP
[ 15]        ASSIGNOP: =
NEW NODE: ID
[ 15]              ID: a
NEW NODE: LB
[ 15]              LB: [
NEW NODE: Exp
NEW NODE: ID
[ 15]              ID: i
NEW NODE: RB
[ 15]              RB: ]
NEW NODE: Exp
NEW NODE: Exp
NEW NODE: LB
[ 15]              LB: [
NEW NODE: ID
[ 15]              ID: i
NEW NODE: RB
[ 15]              RB: ]
NEW NODE: Exp
NEW NODE: Exp
NEW NODE: SEMI
[ 15]            SEMI: ;
NEW NODE: Exp
NEW NODE: Stmt
NEW NODE: ID
[ 16]              ID: t
NEW NODE: DOT
[ 16]             DOT: .
NEW NODE: Exp
NEW NODE: ID
[ 16]              ID: hair
NEW NODE: Exp
NEW NODE: LB
[ 16]              LB: [
NEW NODE: ID
[ 16]              ID: i
NEW NODE: RB
[ 16]              RB: ]
NEW NODE: Exp
NEW NODE: Exp
NEW NODE: ASSIGNOP
[ 16]        ASSIGNOP: =
NEW NODE: ID
[ 16]              ID: a
NEW NODE: LB
[ 16]              LB: [
NEW NODE: Exp
NEW NODE: ID
[ 16]              ID: i
NEW NODE: RB
[ 16]              RB: ]
NEW NODE: Exp
NEW NODE: Exp
NEW NODE: LB
[ 16]              LB: [
NEW NODE: ID
[ 16]              ID: N
NEW NODE: MINUS
[ 16]           MINUS: -
NEW NODE: Exp
NEW NODE: ID
[ 16]              ID: i
NEW NODE: MINUS
[ 16]           MINUS: -
NEW NODE: Exp
NEW NODE: Exp
NEW NODE: INT
[ 16]             INT: 1
NEW NODE: Exp
NEW NODE: RB
[ 16]              RB: ]
NEW NODE: Exp
NEW NODE: Exp
NEW NODE: SEMI
[ 16]            SEMI: ;
NEW NODE: Exp
NEW NODE: Stmt
NEW NODE: ID
[ 17]              ID: i
NEW NODE: ASSIGNOP
[ 17]        ASSIGNOP: =
NEW NODE: Exp
NEW NODE: ID
[ 17]              ID: i
NEW NODE: PLUS
[ 17]            PLUS: +
NEW NODE: Exp
NEW NODE: INT
[ 17]             INT: 1
NEW NODE: Exp
NEW NODE: SEMI
[ 17]            SEMI: ;
NEW NODE: Exp
NEW NODE: Exp
NEW NODE: Stmt
NEW NODE: RC
[ 18]              RC: }
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: CompSt
NEW NODE: Stmt
NEW NODE: Stmt
NEW NODE: WHILE
[ 19]           WHILE: while
NEW NODE: LP
[ 19]              LP: (
NEW NODE: ID
[ 19]              ID: i
NEW NODE: RELOP
[ 19]           RELOP: >=
NEW NODE: Exp
NEW NODE: INT
[ 19]             INT: 0
NEW NODE: Exp
NEW NODE: RP
[ 19]              RP: )
NEW NODE: Exp
NEW NODE: LC
[ 19]              LC: {
NEW NODE: ID
[ 20]              ID: sum
NEW NODE: DefList
NEW NODE: ASSIGNOP
[ 20]        ASSIGNOP: =
NEW NODE: Exp
NEW NODE: ID
[ 20]              ID: sum
NEW NODE: PLUS
[ 20]            PLUS: +
NEW NODE: Exp
NEW NODE: ID
[ 20]              ID: t
NEW NODE: DOT
[ 20]             DOT: .
NEW NODE: Exp
NEW NODE: ID
[ 20]              ID: name
NEW NODE: Exp
NEW NODE: LB
[ 20]              LB: [
NEW NODE: ID
[ 20]              ID: i
NEW NODE: RB
[ 20]              RB: ]
NEW NODE: Exp
NEW NODE: Exp
NEW NODE: STAR
[ 20]            STAR: *
NEW NODE: ID
[ 20]              ID: t
NEW NODE: DOT
[ 20]             DOT: .
NEW NODE: Exp
NEW NODE: ID
[ 20]              ID: hair
NEW NODE: Exp
NEW NODE: SEMI
[ 20]            SEMI: ;
NEW NODE: Exp
NEW NODE: Exp
NEW NODE: Exp
NEW NODE: Stmt
NEW NODE: ID
[ 21]              ID: i
NEW NODE: ASSIGNOP
[ 21]        ASSIGNOP: =
NEW NODE: Exp
NEW NODE: ID
[ 21]              ID: i
NEW NODE: MINUS
[ 21]           MINUS: -
NEW NODE: Exp
NEW NODE: INT
[ 21]             INT: 1
NEW NODE: Exp
NEW NODE: SEMI
[ 21]            SEMI: ;
NEW NODE: Exp
NEW NODE: Exp
NEW NODE: Stmt
NEW NODE: RC
[ 22]              RC: }
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: CompSt
NEW NODE: Stmt
NEW NODE: Stmt
NEW NODE: RETURN
[ 23]          RETURN: return
NEW NODE: ID
[ 23]              ID: sum
NEW NODE: SEMI
[ 23]            SEMI: ;
NEW NODE: Exp
NEW NODE: Stmt
NEW NODE: RC
[ 24]              RC: }
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: CompSt
NEW NODE: ExtDef
NEW NODE: ExtDefList
NEW NODE: ExtDefList
NEW NODE: ExtDefList
NEW NODE: ExtDefList
NEW NODE: Program
Miss 0 Syntax Error.
IN SEMANTIC ANALYSIS
Search for Insert: name: a, ns: 2
Insert Symbol: name: a
------------------------------
stack 0:
	name: a, src: GVAR
------------------------------
[DEBUG] Finish Analysing VarDec4Var.
[DEBUG] Finish Analysing VarDec4Var.
[DEBUG] Finish Analysing VarDec4Var.
[DEBUG] Finish Analysing ExtDecList.
[DEBUG] Finish Analysing ExtDef.
[DEBUG] Finish Analysing OptTag.
Search for Insert: name: name, ns: Field
[DEBUG] Finish Analysing VarDec4Field.
[DEBUG] Finish Analysing VarDec4Field.
[DEBUG] Finish Analysing Dec4Field.
[DEBUG] Finish Analysing DecList4Field.
[DEBUG] Finish Analysing Def4Field.
Search for Insert: name: hair, ns: Field
[DEBUG] Finish Analysing VarDec4Field.
[DEBUG] Finish Analysing VarDec4Field.
[DEBUG] Finish Analysing Dec4Field.
[DEBUG] Finish Analysing DecList4Field.
[DEBUG] Finish Analysing Def4Field.
[DEBUG] Finish Analysing DefList4Field.
[DEBUG] Finish Analysing DefList4Field.
[DEBUG] Finish Analysing DefList4Field.
Search for Insert: name: Type, ns: 1
Insert Symbol: name: Type
------------------------------
stack 0:
	name: Type, src: STRUCT
	name: a, src: GVAR
------------------------------
[DEBUG] Finish Analysing StructSpecifier.
[DEBUG] Finish Analysing Specifier.
[DEBUG] Finish Analysing ExtDef.
[DEBUG] Finish Analysing FunDec.
Search for Insert: name: main, ns: 0
Insert Symbol: name: main
------------------------------
stack 1:
stack 0:
	name: main, src: FUNC
	name: Type, src: STRUCT
	name: a, src: GVAR
------------------------------
Search for Insert: name: i, ns: 3
Insert Symbol: name: i
------------------------------
stack 1:
	name: i, src: LVAR
stack 0:
	name: main, src: FUNC
	name: Type, src: STRUCT
	name: a, src: GVAR
------------------------------
[DEBUG] Finish Analysing VarDec4Var.
[DEBUG] Finish Analysing Dec4LocalVar.
Search for Insert: name: N, ns: 3
Insert Symbol: name: N
------------------------------
stack 1:
	name: N, src: LVAR
	name: i, src: LVAR
stack 0:
	name: main, src: FUNC
	name: Type, src: STRUCT
	name: a, src: GVAR
------------------------------
[DEBUG] Finish Analysing VarDec4Var.
[DEBUG] Finish Analysing Dec4LocalVar.
Search for Insert: name: sum, ns: 3
Insert Symbol: name: sum
------------------------------
stack 1:
	name: sum, src: LVAR
	name: N, src: LVAR
	name: i, src: LVAR
stack 0:
	name: main, src: FUNC
	name: Type, src: STRUCT
	name: a, src: GVAR
------------------------------
[DEBUG] Finish Analysing VarDec4Var.
[DEBUG] Finish Analysing Dec4LocalVar.
[DEBUG] Finish Analysing DecList4LocalVar.
[DEBUG] Finish Analysing DecList4LocalVar.
[DEBUG] Finish Analysing DecList4LocalVar.
[DEBUG] Finish Analysing Def4LocalVar.
[DEBUG] Finish Analysing StructSpecifier.
Search for Use: name: Type, ns: 1
[DEBUG] Finish Analysing Specifier.
Search for Insert: name: t, ns: 3
Insert Symbol: name: t
------------------------------
stack 1:
	name: t, src: LVAR
	name: sum, src: LVAR
	name: N, src: LVAR
	name: i, src: LVAR
stack 0:
	name: main, src: FUNC
	name: Type, src: STRUCT
	name: a, src: GVAR
------------------------------
[DEBUG] Finish Analysing VarDec4Var.
[DEBUG] Finish Analysing Dec4LocalVar.
[DEBUG] Finish Analysing DecList4LocalVar.
[DEBUG] Finish Analysing Def4LocalVar.
[DEBUG] Finish Analysing DefList4LocalVar.
[DEBUG] Finish Analysing DefList4LocalVar.
[DEBUG] Finish Analysing DefList4LocalVar.
Search for Use: name: i, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
Search for Use: name: N, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
Search for Use: name: sum, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
Search for Use: name: i, ns: 3
[DEBUG] Finish Analysing Exp.
Search for Use: name: N, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing DefList4LocalVar.
Search for Use: name: name, ns: Field
Search for Use: name: t, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
Search for Use: name: i, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
Search for Use: name: a, ns: 3
Search for Use: name: a, ns: 2
[DEBUG] Finish Analysing Exp.
Search for Use: name: i, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
Search for Use: name: i, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
Search for Use: name: hair, ns: Field
Search for Use: name: t, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
Search for Use: name: i, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
Search for Use: name: a, ns: 3
Search for Use: name: a, ns: 2
[DEBUG] Finish Analysing Exp.
Search for Use: name: i, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
Search for Use: name: N, ns: 3
[DEBUG] Finish Analysing Exp.
Search for Use: name: i, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
Search for Use: name: i, ns: 3
[DEBUG] Finish Analysing Exp.
Search for Use: name: i, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing CompSt.
Clear Stack Top
------------------------------
stack 2:
stack 1:
	name: t, src: LVAR
	name: sum, src: LVAR
	name: N, src: LVAR
	name: i, src: LVAR
stack 0:
	name: main, src: FUNC
	name: Type, src: STRUCT
	name: a, src: GVAR
------------------------------
[DEBUG] Finish Analysing Stmt.
[DEBUG] Finish Analysing Stmt.
Search for Use: name: i, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing DefList4LocalVar.
Search for Use: name: sum, ns: 3
[DEBUG] Finish Analysing Exp.
Search for Use: name: sum, ns: 3
[DEBUG] Finish Analysing Exp.
Search for Use: name: name, ns: Field
Search for Use: name: t, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
Search for Use: name: i, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
Search for Use: name: hair, ns: Field
Search for Use: name: t, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
Search for Use: name: i, ns: 3
[DEBUG] Finish Analysing Exp.
Search for Use: name: i, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing CompSt.
Clear Stack Top
------------------------------
stack 2:
stack 1:
	name: t, src: LVAR
	name: sum, src: LVAR
	name: N, src: LVAR
	name: i, src: LVAR
stack 0:
	name: main, src: FUNC
	name: Type, src: STRUCT
	name: a, src: GVAR
------------------------------
[DEBUG] Finish Analysing Stmt.
[DEBUG] Finish Analysing Stmt.
Search for Use: name: sum, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing CompSt.
Clear Stack Top
------------------------------
stack 1:
stack 0:
	name: main, src: FUNC
	name: Type, src: STRUCT
	name: a, src: GVAR
------------------------------
[DEBUG] Finish Analysing ExtDef.
[DEBUG] Finish Analysing ExtDefList.
[DEBUG] Finish Analysing ExtDefList.
[DEBUG] Finish Analysing ExtDefList.
[DEBUG] Finish Analysing ExtDefList.
[DEBUG] Finish Analysing Program.
