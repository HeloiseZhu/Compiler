NEW NODE: STRUCT
[  1]          STRUCT: struct
NEW NODE: ID
[  1]              ID: Dog
NEW NODE: LC
[  1]              LC: {
NEW NODE: OptTag
NEW NODE: TYPE
[  2]            TYPE: int
NEW NODE: Specifier
NEW NODE: ID
[  2]              ID: name
NEW NODE: VarDec
NEW NODE: COMMA
[  2]           COMMA: ,
NEW NODE: Dec
NEW NODE: ID
[  2]              ID: height
NEW NODE: VarDec
NEW NODE: COMMA
[  2]           COMMA: ,
NEW NODE: Dec
NEW NODE: ID
[  2]              ID: kind
NEW NODE: VarDec
NEW NODE: COMMA
[  2]           COMMA: ,
NEW NODE: Dec
NEW NODE: ID
[  2]              ID: owner
NEW NODE: VarDec
NEW NODE: SEMI
[  2]            SEMI: ;
NEW NODE: Dec
NEW NODE: DecList
NEW NODE: DecList
NEW NODE: DecList
NEW NODE: DecList
NEW NODE: Def
NEW NODE: TYPE
[  3]            TYPE: float
NEW NODE: Specifier
NEW NODE: ID
[  3]              ID: beauty
NEW NODE: VarDec
NEW NODE: SEMI
[  3]            SEMI: ;
NEW NODE: Dec
NEW NODE: DecList
NEW NODE: Def
NEW NODE: RC
[  4]              RC: }
NEW NODE: DefList
NEW NODE: DefList
NEW NODE: DefList
NEW NODE: StructSpecifier
NEW NODE: Specifier
NEW NODE: SEMI
[  4]            SEMI: ;
NEW NODE: ExtDef
NEW NODE: STRUCT
[  6]          STRUCT: struct
NEW NODE: ID
[  6]              ID: DogHouse
NEW NODE: LC
[  6]              LC: {
NEW NODE: OptTag
NEW NODE: TYPE
[  7]            TYPE: int
NEW NODE: Specifier
NEW NODE: ID
[  7]              ID: address
NEW NODE: VarDec
NEW NODE: SEMI
[  7]            SEMI: ;
NEW NODE: Dec
NEW NODE: DecList
NEW NODE: Def
NEW NODE: TYPE
[  8]            TYPE: float
NEW NODE: Specifier
NEW NODE: ID
[  8]              ID: strong
NEW NODE: VarDec
NEW NODE: ASSIGNOP
[  8]        ASSIGNOP: =
NEW NODE: FLOAT
[  8]           FLOAT: 2.3
NEW NODE: Exp
NEW NODE: SEMI
[  8]            SEMI: ;
NEW NODE: Dec
NEW NODE: DecList
NEW NODE: Def
NEW NODE: STRUCT
[  9]          STRUCT: struct
NEW NODE: ID
[  9]              ID: Dog
NEW NODE: ID
[  9]              ID: dogs
NEW NODE: Tag
NEW NODE: StructSpecifier
NEW NODE: Specifier
NEW NODE: VarDec
NEW NODE: LB
[  9]              LB: [
NEW NODE: INT
[  9]             INT: 10
NEW NODE: RB
[  9]              RB: ]
NEW NODE: VarDec
NEW NODE: SEMI
[  9]            SEMI: ;
NEW NODE: Dec
NEW NODE: DecList
NEW NODE: Def
NEW NODE: RC
[ 10]              RC: }
NEW NODE: DefList
NEW NODE: DefList
NEW NODE: DefList
NEW NODE: DefList
NEW NODE: StructSpecifier
NEW NODE: Specifier
NEW NODE: SEMI
[ 10]            SEMI: ;
NEW NODE: ExtDef
NEW NODE: STRUCT
[ 12]          STRUCT: struct
NEW NODE: ID
[ 12]              ID: DogHouse
NEW NODE: ID
[ 12]              ID: putDogInHouse
NEW NODE: Tag
NEW NODE: StructSpecifier
NEW NODE: Specifier
NEW NODE: LP
[ 12]              LP: (
NEW NODE: STRUCT
[ 12]          STRUCT: struct
NEW NODE: ID
[ 12]              ID: DogHouse
NEW NODE: ID
[ 12]              ID: house
NEW NODE: Tag
NEW NODE: StructSpecifier
NEW NODE: Specifier
NEW NODE: VarDec
NEW NODE: LB
[ 12]              LB: [
NEW NODE: INT
[ 12]             INT: 10
NEW NODE: RB
[ 12]              RB: ]
NEW NODE: VarDec
NEW NODE: COMMA
[ 12]           COMMA: ,
NEW NODE: ParamDec
NEW NODE: STRUCT
[ 12]          STRUCT: struct
NEW NODE: ID
[ 12]              ID: Dog
NEW NODE: ID
[ 12]              ID: wilds
NEW NODE: Tag
NEW NODE: StructSpecifier
NEW NODE: Specifier
NEW NODE: VarDec
NEW NODE: LB
[ 12]              LB: [
NEW NODE: INT
[ 12]             INT: 100
NEW NODE: RB
[ 12]              RB: ]
NEW NODE: VarDec
NEW NODE: RP
[ 12]              RP: )
NEW NODE: ParamDec
NEW NODE: VarList
NEW NODE: VarList
NEW NODE: FunDec
NEW NODE: LC
[ 12]              LC: {
NEW NODE: TYPE
[ 13]            TYPE: int
NEW NODE: Specifier
NEW NODE: ID
[ 13]              ID: i
NEW NODE: VarDec
NEW NODE: COMMA
[ 13]           COMMA: ,
NEW NODE: Dec
NEW NODE: ID
[ 13]              ID: j
NEW NODE: VarDec
NEW NODE: SEMI
[ 13]            SEMI: ;
NEW NODE: Dec
NEW NODE: DecList
NEW NODE: DecList
NEW NODE: Def
NEW NODE: ID
[ 14]              ID: i
NEW NODE: DefList
NEW NODE: DefList
NEW NODE: ASSIGNOP
[ 14]        ASSIGNOP: =
NEW NODE: Exp
NEW NODE: INT
[ 14]             INT: 0
NEW NODE: Exp
NEW NODE: SEMI
[ 14]            SEMI: ;
NEW NODE: Exp
NEW NODE: Stmt
NEW NODE: WHILE
[ 15]           WHILE: while
NEW NODE: LP
[ 15]              LP: (
NEW NODE: ID
[ 15]              ID: i
NEW NODE: RELOP
[ 15]           RELOP: <
NEW NODE: Exp
NEW NODE: INT
[ 15]             INT: 10
NEW NODE: Exp
NEW NODE: RP
[ 15]              RP: )
NEW NODE: Exp
NEW NODE: LC
[ 15]              LC: {
NEW NODE: ID
[ 16]              ID: j
NEW NODE: DefList
NEW NODE: ASSIGNOP
[ 16]        ASSIGNOP: =
NEW NODE: Exp
NEW NODE: ID
[ 16]              ID: i
NEW NODE: STAR
[ 16]            STAR: *
NEW NODE: Exp
NEW NODE: INT
[ 16]             INT: 10
NEW NODE: Exp
NEW NODE: SEMI
[ 16]            SEMI: ;
NEW NODE: Exp
NEW NODE: Exp
NEW NODE: Stmt
NEW NODE: WHILE
[ 17]           WHILE: while
NEW NODE: LP
[ 17]              LP: (
NEW NODE: ID
[ 17]              ID: j
NEW NODE: RELOP
[ 17]           RELOP: <
NEW NODE: Exp
NEW NODE: LP
[ 17]              LP: (
NEW NODE: ID
[ 17]              ID: i
NEW NODE: PLUS
[ 17]            PLUS: +
NEW NODE: Exp
NEW NODE: INT
[ 17]             INT: 1
NEW NODE: Exp
NEW NODE: RP
[ 17]              RP: )
NEW NODE: Exp
NEW NODE: Exp
NEW NODE: STAR
[ 17]            STAR: *
NEW NODE: INT
[ 17]             INT: 10
NEW NODE: Exp
NEW NODE: RP
[ 17]              RP: )
NEW NODE: Exp
NEW NODE: Exp
NEW NODE: LC
[ 17]              LC: {
NEW NODE: ID
[ 18]              ID: house
NEW NODE: DefList
NEW NODE: LB
[ 18]              LB: [
NEW NODE: Exp
NEW NODE: ID
[ 18]              ID: i
NEW NODE: RB
[ 18]              RB: ]
NEW NODE: Exp
NEW NODE: Exp
NEW NODE: DOT
[ 18]             DOT: .
NEW NODE: ID
[ 18]              ID: dogs
NEW NODE: Exp
NEW NODE: LB
[ 18]              LB: [
NEW NODE: ID
[ 18]              ID: j
NEW NODE: RB
[ 18]              RB: ]
NEW NODE: Exp
NEW NODE: Exp
NEW NODE: ASSIGNOP
[ 18]        ASSIGNOP: =
NEW NODE: ID
[ 18]              ID: wilds
NEW NODE: LB
[ 18]              LB: [
NEW NODE: Exp
NEW NODE: ID
[ 18]              ID: i
NEW NODE: STAR
[ 18]            STAR: *
NEW NODE: Exp
NEW NODE: INT
[ 18]             INT: 10
NEW NODE: Exp
NEW NODE: PLUS
[ 18]            PLUS: +
NEW NODE: Exp
NEW NODE: ID
[ 18]              ID: j
NEW NODE: RB
[ 18]              RB: ]
NEW NODE: Exp
NEW NODE: Exp
NEW NODE: Exp
NEW NODE: SEMI
[ 18]            SEMI: ;
NEW NODE: Exp
NEW NODE: Stmt
NEW NODE: ID
[ 19]              ID: j
NEW NODE: ASSIGNOP
[ 19]        ASSIGNOP: =
NEW NODE: Exp
NEW NODE: ID
[ 19]              ID: j
NEW NODE: SEMI
[ 19]            SEMI: ;
NEW NODE: Exp
NEW NODE: Exp
NEW NODE: Stmt
NEW NODE: RC
[ 20]              RC: }
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: CompSt
NEW NODE: Stmt
NEW NODE: Stmt
NEW NODE: ID
[ 21]              ID: i
NEW NODE: ASSIGNOP
[ 21]        ASSIGNOP: =
NEW NODE: Exp
NEW NODE: ID
[ 21]              ID: i
NEW NODE: PLUS
[ 21]            PLUS: +
NEW NODE: Exp
NEW NODE: INT
[ 21]             INT: 1
NEW NODE: Exp
NEW NODE: SEMI
[ 21]            SEMI: ;
NEW NODE: Exp
NEW NODE: Exp
NEW NODE: Stmt
NEW NODE: RC
[ 22]              RC: }
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: CompSt
NEW NODE: Stmt
NEW NODE: Stmt
NEW NODE: RETURN
[ 23]          RETURN: return
NEW NODE: ID
[ 23]              ID: house
NEW NODE: LB
[ 23]              LB: [
NEW NODE: Exp
NEW NODE: INT
[ 23]             INT: 0
NEW NODE: Exp
NEW NODE: RB
[ 23]              RB: ]
NEW NODE: Exp
NEW NODE: SEMI
[ 23]            SEMI: ;
NEW NODE: Stmt
NEW NODE: RC
[ 24]              RC: }
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: CompSt
NEW NODE: ExtDef
NEW NODE: STRUCT
[ 26]          STRUCT: struct
NEW NODE: ID
[ 26]              ID: Dog
NEW NODE: ID
[ 26]              ID: letDogOut
NEW NODE: Tag
NEW NODE: StructSpecifier
NEW NODE: Specifier
NEW NODE: LP
[ 26]              LP: (
NEW NODE: STRUCT
[ 26]          STRUCT: struct
NEW NODE: ID
[ 26]              ID: DogHouse
NEW NODE: ID
[ 26]              ID: broken
NEW NODE: Tag
NEW NODE: StructSpecifier
NEW NODE: Specifier
NEW NODE: VarDec
NEW NODE: LB
[ 26]              LB: [
NEW NODE: INT
[ 26]             INT: 10
NEW NODE: RB
[ 26]              RB: ]
NEW NODE: VarDec
NEW NODE: COMMA
[ 26]           COMMA: ,
NEW NODE: ParamDec
NEW NODE: TYPE
[ 26]            TYPE: int
NEW NODE: Specifier
NEW NODE: ID
[ 26]              ID: number
NEW NODE: VarDec
NEW NODE: COMMA
[ 26]           COMMA: ,
NEW NODE: ParamDec
NEW NODE: TYPE
[ 26]            TYPE: int
NEW NODE: Specifier
NEW NODE: ID
[ 26]              ID: brokenAddress
NEW NODE: VarDec
NEW NODE: COMMA
[ 26]           COMMA: ,
NEW NODE: ParamDec
NEW NODE: TYPE
[ 26]            TYPE: float
NEW NODE: Specifier
NEW NODE: ID
[ 26]              ID: looseBeauty
NEW NODE: VarDec
NEW NODE: RP
[ 26]              RP: )
NEW NODE: ParamDec
NEW NODE: VarList
NEW NODE: VarList
NEW NODE: VarList
NEW NODE: VarList
NEW NODE: FunDec
NEW NODE: LC
[ 26]              LC: {
NEW NODE: STRUCT
[ 27]          STRUCT: struct
NEW NODE: ID
[ 27]              ID: Dog
NEW NODE: ID
[ 27]              ID: de
NEW NODE: Tag
NEW NODE: StructSpecifier
NEW NODE: Specifier
NEW NODE: VarDec
NEW NODE: SEMI
[ 27]            SEMI: ;
NEW NODE: Dec
NEW NODE: DecList
NEW NODE: Def
NEW NODE: TYPE
[ 28]            TYPE: int
NEW NODE: Specifier
NEW NODE: ID
[ 28]              ID: x
NEW NODE: VarDec
NEW NODE: COMMA
[ 28]           COMMA: ,
NEW NODE: Dec
NEW NODE: ID
[ 28]              ID: y
NEW NODE: VarDec
NEW NODE: SEMI
[ 28]            SEMI: ;
NEW NODE: Dec
NEW NODE: DecList
NEW NODE: DecList
NEW NODE: Def
NEW NODE: ID
[ 29]              ID: x
NEW NODE: DefList
NEW NODE: DefList
NEW NODE: DefList
NEW NODE: ASSIGNOP
[ 29]        ASSIGNOP: =
NEW NODE: Exp
NEW NODE: INT
[ 29]             INT: 0
NEW NODE: Exp
NEW NODE: SEMI
[ 29]            SEMI: ;
NEW NODE: Exp
NEW NODE: Stmt
NEW NODE: WHILE
[ 30]           WHILE: while
NEW NODE: LP
[ 30]              LP: (
NEW NODE: ID
[ 30]              ID: x
NEW NODE: RELOP
[ 30]           RELOP: <
NEW NODE: Exp
NEW NODE: INT
[ 30]             INT: 10
NEW NODE: Exp
NEW NODE: RP
[ 30]              RP: )
NEW NODE: Exp
NEW NODE: LC
[ 30]              LC: {
NEW NODE: IF
[ 31]              IF: if
NEW NODE: DefList
NEW NODE: LP
[ 31]              LP: (
NEW NODE: ID
[ 31]              ID: broken
NEW NODE: LB
[ 31]              LB: [
NEW NODE: Exp
NEW NODE: ID
[ 31]              ID: x
NEW NODE: RB
[ 31]              RB: ]
NEW NODE: Exp
NEW NODE: Exp
NEW NODE: RELOP
[ 31]           RELOP: ==
NEW NODE: ID
[ 31]              ID: brokenAddress
NEW NODE: RP
[ 31]              RP: )
NEW NODE: Exp
NEW NODE: Exp
NEW NODE: LC
[ 31]              LC: {
NEW NODE: ID
[ 32]              ID: de
NEW NODE: DefList
NEW NODE: ASSIGNOP
[ 32]        ASSIGNOP: =
NEW NODE: Exp
NEW NODE: ID
[ 32]              ID: broken
NEW NODE: LB
[ 32]              LB: [
NEW NODE: Exp
NEW NODE: ID
[ 32]              ID: x
NEW NODE: RB
[ 32]              RB: ]
NEW NODE: Exp
NEW NODE: Exp
NEW NODE: DOT
[ 32]             DOT: .
NEW NODE: ID
[ 32]              ID: dogs
NEW NODE: Exp
NEW NODE: LB
[ 32]              LB: [
NEW NODE: ID
[ 32]              ID: number
NEW NODE: RB
[ 32]              RB: ]
NEW NODE: Exp
NEW NODE: Exp
NEW NODE: SEMI
[ 32]            SEMI: ;
NEW NODE: Exp
NEW NODE: Stmt
NEW NODE: ID
[ 33]              ID: de
NEW NODE: ASSIGNOP
[ 33]        ASSIGNOP: =
NEW NODE: Exp
NEW NODE: ID
[ 33]              ID: de
NEW NODE: DOT
[ 33]             DOT: .
NEW NODE: Exp
NEW NODE: ID
[ 33]              ID: height
NEW NODE: Exp
NEW NODE: SEMI
[ 33]            SEMI: ;
NEW NODE: Exp
NEW NODE: Stmt
NEW NODE: RC
[ 34]              RC: }
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: CompSt
NEW NODE: Stmt
NEW NODE: ID
[ 35]              ID: x
NEW NODE: Stmt
NEW NODE: ASSIGNOP
[ 35]        ASSIGNOP: =
NEW NODE: Exp
NEW NODE: ID
[ 35]              ID: x
NEW NODE: PLUS
[ 35]            PLUS: +
NEW NODE: Exp
NEW NODE: INT
[ 35]             INT: 1
NEW NODE: Exp
NEW NODE: SEMI
[ 35]            SEMI: ;
NEW NODE: Exp
NEW NODE: Exp
NEW NODE: Stmt
NEW NODE: RC
[ 36]              RC: }
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: CompSt
NEW NODE: Stmt
NEW NODE: Stmt
NEW NODE: ID
[ 37]              ID: de
NEW NODE: DOT
[ 37]             DOT: .
NEW NODE: Exp
NEW NODE: ID
[ 37]              ID: beauty
NEW NODE: Exp
NEW NODE: ASSIGNOP
[ 37]        ASSIGNOP: =
NEW NODE: ID
[ 37]              ID: de
NEW NODE: DOT
[ 37]             DOT: .
NEW NODE: Exp
NEW NODE: ID
[ 37]              ID: beauty
NEW NODE: Exp
NEW NODE: MINUS
[ 37]           MINUS: -
NEW NODE: ID
[ 37]              ID: looseBeauty
NEW NODE: SEMI
[ 37]            SEMI: ;
NEW NODE: Exp
NEW NODE: Exp
NEW NODE: Exp
NEW NODE: Stmt
NEW NODE: RETURN
[ 38]          RETURN: return
NEW NODE: ID
[ 38]              ID: de
NEW NODE: SEMI
[ 38]            SEMI: ;
NEW NODE: Exp
NEW NODE: Stmt
NEW NODE: RC
[ 39]              RC: }
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: CompSt
NEW NODE: ExtDef
NEW NODE: TYPE
[ 41]            TYPE: float
NEW NODE: Specifier
NEW NODE: ID
[ 41]              ID: main
NEW NODE: LP
[ 41]              LP: (
NEW NODE: RP
[ 41]              RP: )
NEW NODE: FunDec
NEW NODE: LC
[ 41]              LC: {
NEW NODE: STRUCT
[ 42]          STRUCT: struct
NEW NODE: ID
[ 42]              ID: DogHouse
NEW NODE: ID
[ 42]              ID: fullHouse
NEW NODE: Tag
NEW NODE: StructSpecifier
NEW NODE: Specifier
NEW NODE: VarDec
NEW NODE: LB
[ 42]              LB: [
NEW NODE: INT
[ 42]             INT: 10
NEW NODE: RB
[ 42]              RB: ]
NEW NODE: VarDec
NEW NODE: SEMI
[ 42]            SEMI: ;
NEW NODE: Dec
NEW NODE: DecList
NEW NODE: Def
NEW NODE: STRUCT
[ 43]          STRUCT: struct
NEW NODE: ID
[ 43]              ID: Dog
NEW NODE: ID
[ 43]              ID: carols
NEW NODE: Tag
NEW NODE: StructSpecifier
NEW NODE: Specifier
NEW NODE: VarDec
NEW NODE: LB
[ 43]              LB: [
NEW NODE: INT
[ 43]             INT: 100
NEW NODE: RB
[ 43]              RB: ]
NEW NODE: VarDec
NEW NODE: SEMI
[ 43]            SEMI: ;
NEW NODE: Dec
NEW NODE: DecList
NEW NODE: Def
NEW NODE: STRUCT
[ 44]          STRUCT: struct
NEW NODE: ID
[ 44]              ID: DogHouse
NEW NODE: ID
[ 44]              ID: firstHouse
NEW NODE: Tag
NEW NODE: StructSpecifier
NEW NODE: Specifier
NEW NODE: VarDec
NEW NODE: SEMI
[ 44]            SEMI: ;
NEW NODE: Dec
NEW NODE: DecList
NEW NODE: Def
NEW NODE: STRUCT
[ 45]          STRUCT: struct
NEW NODE: ID
[ 45]              ID: Dog
NEW NODE: ID
[ 45]              ID: looseDog
NEW NODE: Tag
NEW NODE: StructSpecifier
NEW NODE: Specifier
NEW NODE: VarDec
NEW NODE: SEMI
[ 45]            SEMI: ;
NEW NODE: Dec
NEW NODE: DecList
NEW NODE: Def
NEW NODE: ID
[ 46]              ID: firstHouse
NEW NODE: DefList
NEW NODE: DefList
NEW NODE: DefList
NEW NODE: DefList
NEW NODE: DefList
NEW NODE: ASSIGNOP
[ 46]        ASSIGNOP: =
NEW NODE: Exp
NEW NODE: ID
[ 46]              ID: putDogInHouse
NEW NODE: LP
[ 46]              LP: (
NEW NODE: ID
[ 46]              ID: fullHouse
NEW NODE: COMMA
[ 46]           COMMA: ,
NEW NODE: Exp
NEW NODE: ID
[ 46]              ID: carols
NEW NODE: RP
[ 46]              RP: )
NEW NODE: Exp
NEW NODE: Args
NEW NODE: Args
NEW NODE: Exp
NEW NODE: SEMI
[ 46]            SEMI: ;
NEW NODE: Exp
NEW NODE: Stmt
NEW NODE: ID
[ 47]              ID: looseDog
NEW NODE: ASSIGNOP
[ 47]        ASSIGNOP: =
NEW NODE: Exp
NEW NODE: ID
[ 47]              ID: letDogout
NEW NODE: LP
[ 47]              LP: (
NEW NODE: ID
[ 47]              ID: fullHouse
NEW NODE: COMMA
[ 47]           COMMA: ,
NEW NODE: Exp
NEW NODE: INT
[ 47]             INT: 3
NEW NODE: Exp
NEW NODE: COMMA
[ 47]           COMMA: ,
NEW NODE: INT
[ 47]             INT: 412
NEW NODE: Exp
NEW NODE: COMMA
[ 47]           COMMA: ,
NEW NODE: FLOAT
[ 47]           FLOAT: 0.4
NEW NODE: Exp
NEW NODE: RP
[ 47]              RP: )
NEW NODE: Args
NEW NODE: Args
NEW NODE: Args
NEW NODE: Args
NEW NODE: Exp
NEW NODE: SEMI
[ 47]            SEMI: ;
NEW NODE: Exp
NEW NODE: Stmt
NEW NODE: RETURN
[ 48]          RETURN: return
NEW NODE: ID
[ 48]              ID: looseDog
NEW NODE: DOT
[ 48]             DOT: .
NEW NODE: Exp
NEW NODE: ID
[ 48]              ID: beauty
NEW NODE: Exp
NEW NODE: SEMI
[ 48]            SEMI: ;
NEW NODE: Stmt
NEW NODE: RC
[ 49]              RC: }
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: CompSt
NEW NODE: ExtDef
NEW NODE: ExtDefList
NEW NODE: ExtDefList
NEW NODE: ExtDefList
NEW NODE: ExtDefList
NEW NODE: ExtDefList
NEW NODE: ExtDefList
NEW NODE: Program
Miss 0 Syntax Error.
IN SEMANTIC ANALYSIS
[DEBUG] Finish Analysing OptTag.
Search for Insert: name: name, ns: Field
[DEBUG] Finish Analysing VarDec4Field.
[DEBUG] Finish Analysing Dec4Field.
Search for Insert: name: height, ns: Field
[DEBUG] Finish Analysing VarDec4Field.
[DEBUG] Finish Analysing Dec4Field.
Search for Insert: name: kind, ns: Field
[DEBUG] Finish Analysing VarDec4Field.
[DEBUG] Finish Analysing Dec4Field.
Search for Insert: name: owner, ns: Field
[DEBUG] Finish Analysing VarDec4Field.
[DEBUG] Finish Analysing Dec4Field.
[DEBUG] Finish Analysing DecList4Field.
[DEBUG] Finish Analysing DecList4Field.
[DEBUG] Finish Analysing DecList4Field.
[DEBUG] Finish Analysing DecList4Field.
[DEBUG] Finish Analysing Def4Field.
Search for Insert: name: beauty, ns: Field
[DEBUG] Finish Analysing VarDec4Field.
[DEBUG] Finish Analysing Dec4Field.
[DEBUG] Finish Analysing DecList4Field.
[DEBUG] Finish Analysing Def4Field.
[DEBUG] Finish Analysing DefList4Field.
[DEBUG] Finish Analysing DefList4Field.
[DEBUG] Finish Analysing DefList4Field.
Search for Insert: name: Dog, ns: 1
Insert Symbol: name: Dog
------------------------------
stack 0:
	name: Dog, src: STRUCT
------------------------------
[DEBUG] Finish Analysing StructSpecifier.
[DEBUG] Finish Analysing Specifier.
[DEBUG] Finish Analysing ExtDef.
[DEBUG] Finish Analysing OptTag.
Search for Insert: name: address, ns: Field
[DEBUG] Finish Analysing VarDec4Field.
[DEBUG] Finish Analysing Dec4Field.
[DEBUG] Finish Analysing DecList4Field.
[DEBUG] Finish Analysing Def4Field.
Search for Insert: name: strong, ns: Field
[DEBUG] Finish Analysing VarDec4Field.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Dec4Field.
[DEBUG] Finish Analysing DecList4Field.
[DEBUG] Finish Analysing Def4Field.
[DEBUG] Finish Analysing StructSpecifier.
Search for Use: name: Dog, ns: 1
[DEBUG] Finish Analysing Specifier.
Search for Insert: name: dogs, ns: Field
[DEBUG] Finish Analysing VarDec4Field.
[DEBUG] Finish Analysing VarDec4Field.
[DEBUG] Finish Analysing Dec4Field.
[DEBUG] Finish Analysing DecList4Field.
[DEBUG] Finish Analysing Def4Field.
[DEBUG] Finish Analysing DefList4Field.
[DEBUG] Finish Analysing DefList4Field.
[DEBUG] Finish Analysing DefList4Field.
[DEBUG] Finish Analysing DefList4Field.
Search for Insert: name: DogHouse, ns: 1
Insert Symbol: name: DogHouse
------------------------------
stack 0:
	name: DogHouse, src: STRUCT
	name: Dog, src: STRUCT
------------------------------
[DEBUG] Finish Analysing StructSpecifier.
[DEBUG] Finish Analysing Specifier.
[DEBUG] Finish Analysing ExtDef.
[DEBUG] Finish Analysing StructSpecifier.
Search for Use: name: DogHouse, ns: 1
[DEBUG] Finish Analysing Specifier.
[DEBUG] Finish Analysing StructSpecifier.
Search for Use: name: DogHouse, ns: 1
[DEBUG] Finish Analysing Specifier.
Search for Insert: name: house, ns: 3
Insert Symbol: name: house
------------------------------
stack 1:
	name: house, src: LVAR
stack 0:
	name: DogHouse, src: STRUCT
	name: Dog, src: STRUCT
------------------------------
[DEBUG] Finish Analysing VarDec4Param.
[DEBUG] Finish Analysing VarDec4Param.
[DEBUG] Finish Analysing ParamDec.
[DEBUG] Finish Analysing StructSpecifier.
Search for Use: name: Dog, ns: 1
[DEBUG] Finish Analysing Specifier.
Search for Insert: name: wilds, ns: 3
Insert Symbol: name: wilds
------------------------------
stack 1:
	name: wilds, src: LVAR
	name: house, src: LVAR
stack 0:
	name: DogHouse, src: STRUCT
	name: Dog, src: STRUCT
------------------------------
[DEBUG] Finish Analysing VarDec4Param.
[DEBUG] Finish Analysing VarDec4Param.
[DEBUG] Finish Analysing ParamDec.
[DEBUG] Finish Analysing VarList.
[DEBUG] Finish Analysing VarList.
[DEBUG] Finish Analysing FunDec.
Search for Insert: name: putDogInHouse, ns: 0
Insert Symbol: name: putDogInHouse
------------------------------
stack 1:
	name: wilds, src: LVAR
	name: house, src: LVAR
stack 0:
	name: putDogInHouse, src: FUNC
	name: DogHouse, src: STRUCT
	name: Dog, src: STRUCT
------------------------------
Search for Insert: name: i, ns: 3
Insert Symbol: name: i
------------------------------
stack 1:
	name: i, src: LVAR
	name: wilds, src: LVAR
	name: house, src: LVAR
stack 0:
	name: putDogInHouse, src: FUNC
	name: DogHouse, src: STRUCT
	name: Dog, src: STRUCT
------------------------------
[DEBUG] Finish Analysing VarDec4Var.
[DEBUG] Finish Analysing Dec4LocalVar.
Search for Insert: name: j, ns: 3
Insert Symbol: name: j
------------------------------
stack 1:
	name: j, src: LVAR
	name: i, src: LVAR
	name: wilds, src: LVAR
	name: house, src: LVAR
stack 0:
	name: putDogInHouse, src: FUNC
	name: DogHouse, src: STRUCT
	name: Dog, src: STRUCT
------------------------------
[DEBUG] Finish Analysing VarDec4Var.
[DEBUG] Finish Analysing Dec4LocalVar.
[DEBUG] Finish Analysing DecList4LocalVar.
[DEBUG] Finish Analysing DecList4LocalVar.
[DEBUG] Finish Analysing Def4LocalVar.
[DEBUG] Finish Analysing DefList4LocalVar.
[DEBUG] Finish Analysing DefList4LocalVar.
Search for Use: name: i, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
Search for Use: name: i, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing DefList4LocalVar.
Search for Use: name: j, ns: 3
[DEBUG] Finish Analysing Exp.
Search for Use: name: i, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
Search for Use: name: j, ns: 3
[DEBUG] Finish Analysing Exp.
Search for Use: name: i, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing DefList4LocalVar.
Search for Use: name: dogs, ns: Field
Search for Use: name: house, ns: 3
[DEBUG] Finish Analysing Exp.
Search for Use: name: i, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
Search for Use: name: j, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
Search for Use: name: wilds, ns: 3
[DEBUG] Finish Analysing Exp.
Search for Use: name: i, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
Search for Use: name: j, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
Search for Use: name: j, ns: 3
[DEBUG] Finish Analysing Exp.
Search for Use: name: j, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing CompSt.
Clear Stack Top
------------------------------
stack 3:
stack 2:
stack 1:
	name: j, src: LVAR
	name: i, src: LVAR
	name: wilds, src: LVAR
	name: house, src: LVAR
stack 0:
	name: putDogInHouse, src: FUNC
	name: DogHouse, src: STRUCT
	name: Dog, src: STRUCT
------------------------------
[DEBUG] Finish Analysing Stmt.
[DEBUG] Finish Analysing Stmt.
Search for Use: name: i, ns: 3
[DEBUG] Finish Analysing Exp.
Search for Use: name: i, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing CompSt.
Clear Stack Top
------------------------------
stack 2:
stack 1:
	name: j, src: LVAR
	name: i, src: LVAR
	name: wilds, src: LVAR
	name: house, src: LVAR
stack 0:
	name: putDogInHouse, src: FUNC
	name: DogHouse, src: STRUCT
	name: Dog, src: STRUCT
------------------------------
[DEBUG] Finish Analysing Stmt.
[DEBUG] Finish Analysing Stmt.
Search for Use: name: house, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing CompSt.
Clear Stack Top
------------------------------
stack 1:
stack 0:
	name: putDogInHouse, src: FUNC
	name: DogHouse, src: STRUCT
	name: Dog, src: STRUCT
------------------------------
[DEBUG] Finish Analysing ExtDef.
[DEBUG] Finish Analysing StructSpecifier.
Search for Use: name: Dog, ns: 1
[DEBUG] Finish Analysing Specifier.
[DEBUG] Finish Analysing StructSpecifier.
Search for Use: name: DogHouse, ns: 1
[DEBUG] Finish Analysing Specifier.
Search for Insert: name: broken, ns: 3
Insert Symbol: name: broken
------------------------------
stack 1:
	name: broken, src: LVAR
stack 0:
	name: putDogInHouse, src: FUNC
	name: DogHouse, src: STRUCT
	name: Dog, src: STRUCT
------------------------------
[DEBUG] Finish Analysing VarDec4Param.
[DEBUG] Finish Analysing VarDec4Param.
[DEBUG] Finish Analysing ParamDec.
Search for Insert: name: number, ns: 3
Insert Symbol: name: number
------------------------------
stack 1:
	name: number, src: LVAR
	name: broken, src: LVAR
stack 0:
	name: putDogInHouse, src: FUNC
	name: DogHouse, src: STRUCT
	name: Dog, src: STRUCT
------------------------------
[DEBUG] Finish Analysing VarDec4Param.
[DEBUG] Finish Analysing ParamDec.
Search for Insert: name: brokenAddress, ns: 3
Insert Symbol: name: brokenAddress
------------------------------
stack 1:
	name: brokenAddress, src: LVAR
	name: number, src: LVAR
	name: broken, src: LVAR
stack 0:
	name: putDogInHouse, src: FUNC
	name: DogHouse, src: STRUCT
	name: Dog, src: STRUCT
------------------------------
[DEBUG] Finish Analysing VarDec4Param.
[DEBUG] Finish Analysing ParamDec.
Search for Insert: name: looseBeauty, ns: 3
Insert Symbol: name: looseBeauty
------------------------------
stack 1:
	name: looseBeauty, src: LVAR
	name: brokenAddress, src: LVAR
	name: number, src: LVAR
	name: broken, src: LVAR
stack 0:
	name: putDogInHouse, src: FUNC
	name: DogHouse, src: STRUCT
	name: Dog, src: STRUCT
------------------------------
[DEBUG] Finish Analysing VarDec4Param.
[DEBUG] Finish Analysing ParamDec.
[DEBUG] Finish Analysing VarList.
[DEBUG] Finish Analysing VarList.
[DEBUG] Finish Analysing VarList.
[DEBUG] Finish Analysing VarList.
[DEBUG] Finish Analysing FunDec.
Search for Insert: name: letDogOut, ns: 0
Insert Symbol: name: letDogOut
------------------------------
stack 1:
	name: looseBeauty, src: LVAR
	name: brokenAddress, src: LVAR
	name: number, src: LVAR
	name: broken, src: LVAR
stack 0:
	name: letDogOut, src: FUNC
	name: putDogInHouse, src: FUNC
	name: DogHouse, src: STRUCT
	name: Dog, src: STRUCT
------------------------------
[DEBUG] Finish Analysing StructSpecifier.
Search for Use: name: Dog, ns: 1
[DEBUG] Finish Analysing Specifier.
Search for Insert: name: de, ns: 3
Insert Symbol: name: de
------------------------------
stack 1:
	name: de, src: LVAR
	name: looseBeauty, src: LVAR
	name: brokenAddress, src: LVAR
	name: number, src: LVAR
	name: broken, src: LVAR
stack 0:
	name: letDogOut, src: FUNC
	name: putDogInHouse, src: FUNC
	name: DogHouse, src: STRUCT
	name: Dog, src: STRUCT
------------------------------
[DEBUG] Finish Analysing VarDec4Var.
[DEBUG] Finish Analysing Dec4LocalVar.
[DEBUG] Finish Analysing DecList4LocalVar.
[DEBUG] Finish Analysing Def4LocalVar.
Search for Insert: name: x, ns: 3
Insert Symbol: name: x
------------------------------
stack 1:
	name: x, src: LVAR
	name: de, src: LVAR
	name: looseBeauty, src: LVAR
	name: brokenAddress, src: LVAR
	name: number, src: LVAR
	name: broken, src: LVAR
stack 0:
	name: letDogOut, src: FUNC
	name: putDogInHouse, src: FUNC
	name: DogHouse, src: STRUCT
	name: Dog, src: STRUCT
------------------------------
[DEBUG] Finish Analysing VarDec4Var.
[DEBUG] Finish Analysing Dec4LocalVar.
Search for Insert: name: y, ns: 3
Insert Symbol: name: y
------------------------------
stack 1:
	name: y, src: LVAR
	name: x, src: LVAR
	name: de, src: LVAR
	name: looseBeauty, src: LVAR
	name: brokenAddress, src: LVAR
	name: number, src: LVAR
	name: broken, src: LVAR
stack 0:
	name: letDogOut, src: FUNC
	name: putDogInHouse, src: FUNC
	name: DogHouse, src: STRUCT
	name: Dog, src: STRUCT
------------------------------
[DEBUG] Finish Analysing VarDec4Var.
[DEBUG] Finish Analysing Dec4LocalVar.
[DEBUG] Finish Analysing DecList4LocalVar.
[DEBUG] Finish Analysing DecList4LocalVar.
[DEBUG] Finish Analysing Def4LocalVar.
[DEBUG] Finish Analysing DefList4LocalVar.
[DEBUG] Finish Analysing DefList4LocalVar.
[DEBUG] Finish Analysing DefList4LocalVar.
Search for Use: name: x, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
Search for Use: name: x, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing DefList4LocalVar.
Search for Use: name: broken, ns: 3
[DEBUG] Finish Analysing Exp.
Search for Use: name: x, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
Search for Use: name: brokenAddress, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing DefList4LocalVar.
Search for Use: name: de, ns: 3
[DEBUG] Finish Analysing Exp.
Search for Use: name: dogs, ns: Field
Search for Use: name: broken, ns: 3
[DEBUG] Finish Analysing Exp.
Search for Use: name: x, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
Search for Use: name: number, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
Search for Use: name: de, ns: 3
[DEBUG] Finish Analysing Exp.
Search for Use: name: height, ns: Field
Search for Use: name: de, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing CompSt.
Clear Stack Top
------------------------------
stack 3:
stack 2:
stack 1:
	name: y, src: LVAR
	name: x, src: LVAR
	name: de, src: LVAR
	name: looseBeauty, src: LVAR
	name: brokenAddress, src: LVAR
	name: number, src: LVAR
	name: broken, src: LVAR
stack 0:
	name: letDogOut, src: FUNC
	name: putDogInHouse, src: FUNC
	name: DogHouse, src: STRUCT
	name: Dog, src: STRUCT
------------------------------
[DEBUG] Finish Analysing Stmt.
[DEBUG] Finish Analysing Stmt.
Search for Use: name: x, ns: 3
[DEBUG] Finish Analysing Exp.
Search for Use: name: x, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing CompSt.
Clear Stack Top
------------------------------
stack 2:
stack 1:
	name: y, src: LVAR
	name: x, src: LVAR
	name: de, src: LVAR
	name: looseBeauty, src: LVAR
	name: brokenAddress, src: LVAR
	name: number, src: LVAR
	name: broken, src: LVAR
stack 0:
	name: letDogOut, src: FUNC
	name: putDogInHouse, src: FUNC
	name: DogHouse, src: STRUCT
	name: Dog, src: STRUCT
------------------------------
[DEBUG] Finish Analysing Stmt.
[DEBUG] Finish Analysing Stmt.
Search for Use: name: beauty, ns: Field
Search for Use: name: de, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
Search for Use: name: beauty, ns: Field
Search for Use: name: de, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
Search for Use: name: looseBeauty, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
Search for Use: name: de, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing CompSt.
Clear Stack Top
------------------------------
stack 1:
stack 0:
	name: letDogOut, src: FUNC
	name: putDogInHouse, src: FUNC
	name: DogHouse, src: STRUCT
	name: Dog, src: STRUCT
------------------------------
[DEBUG] Finish Analysing ExtDef.
[DEBUG] Finish Analysing FunDec.
Search for Insert: name: main, ns: 0
Insert Symbol: name: main
------------------------------
stack 1:
stack 0:
	name: main, src: FUNC
	name: letDogOut, src: FUNC
	name: putDogInHouse, src: FUNC
	name: DogHouse, src: STRUCT
	name: Dog, src: STRUCT
------------------------------
[DEBUG] Finish Analysing StructSpecifier.
Search for Use: name: DogHouse, ns: 1
[DEBUG] Finish Analysing Specifier.
Search for Insert: name: fullHouse, ns: 3
Insert Symbol: name: fullHouse
------------------------------
stack 1:
	name: fullHouse, src: LVAR
stack 0:
	name: main, src: FUNC
	name: letDogOut, src: FUNC
	name: putDogInHouse, src: FUNC
	name: DogHouse, src: STRUCT
	name: Dog, src: STRUCT
------------------------------
[DEBUG] Finish Analysing VarDec4Var.
[DEBUG] Finish Analysing VarDec4Var.
[DEBUG] Finish Analysing Dec4LocalVar.
[DEBUG] Finish Analysing DecList4LocalVar.
[DEBUG] Finish Analysing Def4LocalVar.
[DEBUG] Finish Analysing StructSpecifier.
Search for Use: name: Dog, ns: 1
[DEBUG] Finish Analysing Specifier.
Search for Insert: name: carols, ns: 3
Insert Symbol: name: carols
------------------------------
stack 1:
	name: carols, src: LVAR
	name: fullHouse, src: LVAR
stack 0:
	name: main, src: FUNC
	name: letDogOut, src: FUNC
	name: putDogInHouse, src: FUNC
	name: DogHouse, src: STRUCT
	name: Dog, src: STRUCT
------------------------------
[DEBUG] Finish Analysing VarDec4Var.
[DEBUG] Finish Analysing VarDec4Var.
[DEBUG] Finish Analysing Dec4LocalVar.
[DEBUG] Finish Analysing DecList4LocalVar.
[DEBUG] Finish Analysing Def4LocalVar.
[DEBUG] Finish Analysing StructSpecifier.
Search for Use: name: DogHouse, ns: 1
[DEBUG] Finish Analysing Specifier.
Search for Insert: name: firstHouse, ns: 3
Insert Symbol: name: firstHouse
------------------------------
stack 1:
	name: firstHouse, src: LVAR
	name: carols, src: LVAR
	name: fullHouse, src: LVAR
stack 0:
	name: main, src: FUNC
	name: letDogOut, src: FUNC
	name: putDogInHouse, src: FUNC
	name: DogHouse, src: STRUCT
	name: Dog, src: STRUCT
------------------------------
[DEBUG] Finish Analysing VarDec4Var.
[DEBUG] Finish Analysing Dec4LocalVar.
[DEBUG] Finish Analysing DecList4LocalVar.
[DEBUG] Finish Analysing Def4LocalVar.
[DEBUG] Finish Analysing StructSpecifier.
Search for Use: name: Dog, ns: 1
[DEBUG] Finish Analysing Specifier.
Search for Insert: name: looseDog, ns: 3
Insert Symbol: name: looseDog
------------------------------
stack 1:
	name: looseDog, src: LVAR
	name: firstHouse, src: LVAR
	name: carols, src: LVAR
	name: fullHouse, src: LVAR
stack 0:
	name: main, src: FUNC
	name: letDogOut, src: FUNC
	name: putDogInHouse, src: FUNC
	name: DogHouse, src: STRUCT
	name: Dog, src: STRUCT
------------------------------
[DEBUG] Finish Analysing VarDec4Var.
[DEBUG] Finish Analysing Dec4LocalVar.
[DEBUG] Finish Analysing DecList4LocalVar.
[DEBUG] Finish Analysing Def4LocalVar.
[DEBUG] Finish Analysing DefList4LocalVar.
[DEBUG] Finish Analysing DefList4LocalVar.
[DEBUG] Finish Analysing DefList4LocalVar.
[DEBUG] Finish Analysing DefList4LocalVar.
[DEBUG] Finish Analysing DefList4LocalVar.
Search for Use: name: firstHouse, ns: 3
[DEBUG] Finish Analysing Exp.
Search for Use: name: putDogInHouse, ns: 0
Search for Use: name: fullHouse, ns: 3
[DEBUG] Finish Analysing Exp.
Search for Use: name: carols, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Args.
[DEBUG] Finish Analysing Args.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
Search for Use: name: looseDog, ns: 3
[DEBUG] Finish Analysing Exp.
Search for Use: name: letDogout, ns: 0
Search for Use: name: letDogout, ns: 3
Search for Use: name: letDogout, ns: 2
Search for Use: name: fullHouse, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Args.
[DEBUG] Finish Analysing Args.
[DEBUG] Finish Analysing Args.
[DEBUG] Finish Analysing Args.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
Search for Use: name: beauty, ns: Field
Search for Use: name: looseDog, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing CompSt.
Clear Stack Top
------------------------------
stack 1:
stack 0:
	name: main, src: FUNC
	name: letDogOut, src: FUNC
	name: putDogInHouse, src: FUNC
	name: DogHouse, src: STRUCT
	name: Dog, src: STRUCT
------------------------------
[DEBUG] Finish Analysing ExtDef.
[DEBUG] Finish Analysing ExtDefList.
[DEBUG] Finish Analysing ExtDefList.
[DEBUG] Finish Analysing ExtDefList.
[DEBUG] Finish Analysing ExtDefList.
[DEBUG] Finish Analysing ExtDefList.
[DEBUG] Finish Analysing ExtDefList.
[DEBUG] Finish Analysing Program.
