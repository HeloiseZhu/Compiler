NEW NODE: STRUCT
[  1]          STRUCT: struct
NEW NODE: ID
[  1]              ID: food
NEW NODE: LC
[  1]              LC: {
NEW NODE: OptTag
NEW NODE: TYPE
[  2]            TYPE: int
NEW NODE: Specifier
NEW NODE: ID
[  2]              ID: name
NEW NODE: VarDec
NEW NODE: SEMI
[  2]            SEMI: ;
NEW NODE: Dec
NEW NODE: DecList
NEW NODE: Def
NEW NODE: TYPE
[  3]            TYPE: float
NEW NODE: Specifier
NEW NODE: ID
[  3]              ID: price
NEW NODE: VarDec
NEW NODE: SEMI
[  3]            SEMI: ;
NEW NODE: Dec
NEW NODE: DecList
NEW NODE: Def
NEW NODE: RC
[  4]              RC: }
NEW NODE: DefList
NEW NODE: DefList
NEW NODE: DefList
NEW NODE: StructSpecifier
NEW NODE: Specifier
NEW NODE: ID
[  4]              ID: ham
NEW NODE: COMMA
[  4]           COMMA: ,
NEW NODE: VarDec
NEW NODE: ID
[  4]              ID: burger
NEW NODE: VarDec
NEW NODE: SEMI
[  4]            SEMI: ;
NEW NODE: ExtDecList
NEW NODE: ExtDecList
NEW NODE: ExtDef
NEW NODE: TYPE
[  6]            TYPE: int
NEW NODE: Specifier
NEW NODE: ID
[  6]              ID: tem
NEW NODE: SEMI
[  6]            SEMI: ;
NEW NODE: VarDec
NEW NODE: ExtDecList
NEW NODE: ExtDef
NEW NODE: TYPE
[  7]            TYPE: float
NEW NODE: Specifier
NEW NODE: ID
[  7]              ID: tem1
NEW NODE: SEMI
[  7]            SEMI: ;
NEW NODE: VarDec
NEW NODE: ExtDecList
NEW NODE: ExtDef
NEW NODE: TYPE
[  9]            TYPE: int
NEW NODE: Specifier
NEW NODE: ID
[  9]              ID: swap
NEW NODE: LP
[  9]              LP: (
NEW NODE: STRUCT
[  9]          STRUCT: struct
NEW NODE: ID
[  9]              ID: food
NEW NODE: ID
[  9]              ID: a
NEW NODE: Tag
NEW NODE: StructSpecifier
NEW NODE: Specifier
NEW NODE: VarDec
NEW NODE: COMMA
[  9]           COMMA: ,
NEW NODE: ParamDec
NEW NODE: STRUCT
[  9]          STRUCT: struct
NEW NODE: ID
[  9]              ID: food
NEW NODE: ID
[  9]              ID: b
NEW NODE: Tag
NEW NODE: StructSpecifier
NEW NODE: Specifier
NEW NODE: VarDec
NEW NODE: COMMA
[  9]           COMMA: ,
NEW NODE: ParamDec
NEW NODE: TYPE
[  9]            TYPE: int
NEW NODE: Specifier
NEW NODE: ID
[  9]              ID: type
NEW NODE: VarDec
NEW NODE: RP
[  9]              RP: )
NEW NODE: ParamDec
NEW NODE: VarList
NEW NODE: VarList
NEW NODE: VarList
NEW NODE: FunDec
NEW NODE: LC
[  9]              LC: {
NEW NODE: IF
[ 10]              IF: if
NEW NODE: DefList
NEW NODE: LP
[ 10]              LP: (
NEW NODE: ID
[ 10]              ID: type
NEW NODE: RELOP
[ 10]           RELOP: ==
NEW NODE: Exp
NEW NODE: INT
[ 10]             INT: 1
NEW NODE: Exp
NEW NODE: RP
[ 10]              RP: )
NEW NODE: Exp
NEW NODE: LC
[ 10]              LC: {
NEW NODE: ID
[ 11]              ID: tem
NEW NODE: DefList
NEW NODE: ASSIGNOP
[ 11]        ASSIGNOP: =
NEW NODE: Exp
NEW NODE: ID
[ 11]              ID: a
NEW NODE: DOT
[ 11]             DOT: .
NEW NODE: Exp
NEW NODE: ID
[ 11]              ID: name
NEW NODE: Exp
NEW NODE: SEMI
[ 11]            SEMI: ;
NEW NODE: Exp
NEW NODE: Stmt
NEW NODE: ID
[ 12]              ID: a
NEW NODE: DOT
[ 12]             DOT: .
NEW NODE: Exp
NEW NODE: ID
[ 12]              ID: name
NEW NODE: Exp
NEW NODE: ASSIGNOP
[ 12]        ASSIGNOP: =
NEW NODE: ID
[ 12]              ID: b
NEW NODE: DOT
[ 12]             DOT: .
NEW NODE: Exp
NEW NODE: ID
[ 12]              ID: name
NEW NODE: Exp
NEW NODE: SEMI
[ 12]            SEMI: ;
NEW NODE: Exp
NEW NODE: Stmt
NEW NODE: ID
[ 13]              ID: b
NEW NODE: DOT
[ 13]             DOT: .
NEW NODE: Exp
NEW NODE: ID
[ 13]              ID: name
NEW NODE: Exp
NEW NODE: ASSIGNOP
[ 13]        ASSIGNOP: =
NEW NODE: ID
[ 13]              ID: tem
NEW NODE: SEMI
[ 13]            SEMI: ;
NEW NODE: Exp
NEW NODE: Exp
NEW NODE: Stmt
NEW NODE: RC
[ 14]              RC: }
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: CompSt
NEW NODE: Stmt
NEW NODE: ELSE
[ 14]            ELSE: else
NEW NODE: LC
[ 14]              LC: {
NEW NODE: ID
[ 15]              ID: tem1
NEW NODE: DefList
NEW NODE: ASSIGNOP
[ 15]        ASSIGNOP: =
NEW NODE: Exp
NEW NODE: ID
[ 15]              ID: a
NEW NODE: DOT
[ 15]             DOT: .
NEW NODE: Exp
NEW NODE: ID
[ 15]              ID: price
NEW NODE: Exp
NEW NODE: SEMI
[ 15]            SEMI: ;
NEW NODE: Exp
NEW NODE: Stmt
NEW NODE: ID
[ 16]              ID: a
NEW NODE: DOT
[ 16]             DOT: .
NEW NODE: Exp
NEW NODE: ID
[ 16]              ID: price
NEW NODE: Exp
NEW NODE: ASSIGNOP
[ 16]        ASSIGNOP: =
NEW NODE: ID
[ 16]              ID: b
NEW NODE: DOT
[ 16]             DOT: .
NEW NODE: Exp
NEW NODE: ID
[ 16]              ID: price
NEW NODE: Exp
NEW NODE: SEMI
[ 16]            SEMI: ;
NEW NODE: Exp
NEW NODE: Stmt
NEW NODE: ID
[ 17]              ID: b
NEW NODE: DOT
[ 17]             DOT: .
NEW NODE: Exp
NEW NODE: ID
[ 17]              ID: price
NEW NODE: Exp
NEW NODE: ASSIGNOP
[ 17]        ASSIGNOP: =
NEW NODE: ID
[ 17]              ID: tem1
NEW NODE: SEMI
[ 17]            SEMI: ;
NEW NODE: Exp
NEW NODE: Exp
NEW NODE: Stmt
NEW NODE: RC
[ 18]              RC: }
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: CompSt
NEW NODE: Stmt
NEW NODE: Stmt
NEW NODE: RETURN
[ 19]          RETURN: return
NEW NODE: INT
[ 19]             INT: 1
NEW NODE: Exp
NEW NODE: SEMI
[ 19]            SEMI: ;
NEW NODE: Stmt
NEW NODE: RC
[ 20]              RC: }
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: CompSt
NEW NODE: ExtDef
NEW NODE: TYPE
[ 22]            TYPE: int
NEW NODE: Specifier
NEW NODE: ID
[ 22]              ID: main
NEW NODE: LP
[ 22]              LP: (
NEW NODE: RP
[ 22]              RP: )
NEW NODE: FunDec
NEW NODE: LC
[ 22]              LC: {
NEW NODE: ID
[ 23]              ID: swap
NEW NODE: DefList
NEW NODE: LP
[ 23]              LP: (
NEW NODE: ID
[ 23]              ID: ham
NEW NODE: COMMA
[ 23]           COMMA: ,
NEW NODE: Exp
NEW NODE: ID
[ 23]              ID: burger
NEW NODE: RP
[ 23]              RP: )
NEW NODE: Exp
NEW NODE: Args
NEW NODE: Args
NEW NODE: Exp
NEW NODE: SEMI
[ 23]            SEMI: ;
NEW NODE: Stmt
NEW NODE: RETURN
[ 24]          RETURN: return
NEW NODE: INT
[ 24]             INT: 0
NEW NODE: Exp
NEW NODE: SEMI
[ 24]            SEMI: ;
NEW NODE: Stmt
NEW NODE: RC
[ 25]              RC: }
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: StmtList
NEW NODE: CompSt
NEW NODE: ExtDef
NEW NODE: ExtDefList
NEW NODE: ExtDefList
NEW NODE: ExtDefList
NEW NODE: ExtDefList
NEW NODE: ExtDefList
NEW NODE: ExtDefList
NEW NODE: Program
Miss 0 Syntax Error.
IN SEMANTIC ANALYSIS
[DEBUG] Finish Analysing OptTag.
Search for Insert: name: name, ns: Field
[DEBUG] Finish Analysing VarDec4Field.
[DEBUG] Finish Analysing Dec4Field.
[DEBUG] Finish Analysing DecList4Field.
[DEBUG] Finish Analysing Def4Field.
Search for Insert: name: price, ns: Field
[DEBUG] Finish Analysing VarDec4Field.
[DEBUG] Finish Analysing Dec4Field.
[DEBUG] Finish Analysing DecList4Field.
[DEBUG] Finish Analysing Def4Field.
[DEBUG] Finish Analysing DefList4Field.
[DEBUG] Finish Analysing DefList4Field.
[DEBUG] Finish Analysing DefList4Field.
Search for Insert: name: food, ns: 1
Insert Symbol: name: food
------------------------------
stack 0:
	name: food, src: STRUCT
------------------------------
[DEBUG] Finish Analysing StructSpecifier.
[DEBUG] Finish Analysing Specifier.
Search for Insert: name: ham, ns: 2
Insert Symbol: name: ham
------------------------------
stack 0:
	name: ham, src: GVAR
	name: food, src: STRUCT
------------------------------
[DEBUG] Finish Analysing VarDec4Var.
Search for Insert: name: burger, ns: 2
Insert Symbol: name: burger
------------------------------
stack 0:
	name: burger, src: GVAR
	name: ham, src: GVAR
	name: food, src: STRUCT
------------------------------
[DEBUG] Finish Analysing VarDec4Var.
[DEBUG] Finish Analysing ExtDecList.
[DEBUG] Finish Analysing ExtDecList.
[DEBUG] Finish Analysing ExtDef.
Search for Insert: name: tem, ns: 2
Insert Symbol: name: tem
------------------------------
stack 0:
	name: tem, src: GVAR
	name: burger, src: GVAR
	name: ham, src: GVAR
	name: food, src: STRUCT
------------------------------
[DEBUG] Finish Analysing VarDec4Var.
[DEBUG] Finish Analysing ExtDecList.
[DEBUG] Finish Analysing ExtDef.
Search for Insert: name: tem1, ns: 2
Insert Symbol: name: tem1
------------------------------
stack 0:
	name: tem1, src: GVAR
	name: tem, src: GVAR
	name: burger, src: GVAR
	name: ham, src: GVAR
	name: food, src: STRUCT
------------------------------
[DEBUG] Finish Analysing VarDec4Var.
[DEBUG] Finish Analysing ExtDecList.
[DEBUG] Finish Analysing ExtDef.
[DEBUG] Finish Analysing StructSpecifier.
Search for Use: name: food, ns: 1
[DEBUG] Finish Analysing Specifier.
Search for Insert: name: a, ns: 3
Insert Symbol: name: a
------------------------------
stack 1:
	name: a, src: LVAR
stack 0:
	name: tem1, src: GVAR
	name: tem, src: GVAR
	name: burger, src: GVAR
	name: ham, src: GVAR
	name: food, src: STRUCT
------------------------------
[DEBUG] Finish Analysing VarDec4Param.
[DEBUG] Finish Analysing ParamDec.
[DEBUG] Finish Analysing StructSpecifier.
Search for Use: name: food, ns: 1
[DEBUG] Finish Analysing Specifier.
Search for Insert: name: b, ns: 3
Insert Symbol: name: b
------------------------------
stack 1:
	name: b, src: LVAR
	name: a, src: LVAR
stack 0:
	name: tem1, src: GVAR
	name: tem, src: GVAR
	name: burger, src: GVAR
	name: ham, src: GVAR
	name: food, src: STRUCT
------------------------------
[DEBUG] Finish Analysing VarDec4Param.
[DEBUG] Finish Analysing ParamDec.
Search for Insert: name: type, ns: 3
Insert Symbol: name: type
------------------------------
stack 1:
	name: type, src: LVAR
	name: b, src: LVAR
	name: a, src: LVAR
stack 0:
	name: tem1, src: GVAR
	name: tem, src: GVAR
	name: burger, src: GVAR
	name: ham, src: GVAR
	name: food, src: STRUCT
------------------------------
[DEBUG] Finish Analysing VarDec4Param.
[DEBUG] Finish Analysing ParamDec.
[DEBUG] Finish Analysing VarList.
[DEBUG] Finish Analysing VarList.
[DEBUG] Finish Analysing VarList.
[DEBUG] Finish Analysing FunDec.
Search for Insert: name: swap, ns: 0
Insert Symbol: name: swap
------------------------------
stack 1:
	name: type, src: LVAR
	name: b, src: LVAR
	name: a, src: LVAR
stack 0:
	name: swap, src: FUNC
	name: tem1, src: GVAR
	name: tem, src: GVAR
	name: burger, src: GVAR
	name: ham, src: GVAR
	name: food, src: STRUCT
------------------------------
[DEBUG] Finish Analysing DefList4LocalVar.
Search for Use: name: type, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing DefList4LocalVar.
Search for Use: name: tem, ns: 3
Search for Use: name: tem, ns: 2
[DEBUG] Finish Analysing Exp.
Search for Use: name: name, ns: Field
Search for Use: name: a, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
Search for Use: name: name, ns: Field
Search for Use: name: a, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
Search for Use: name: name, ns: Field
Search for Use: name: b, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
Search for Use: name: name, ns: Field
Search for Use: name: b, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
Search for Use: name: tem, ns: 3
Search for Use: name: tem, ns: 2
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing CompSt.
Clear Stack Top
------------------------------
stack 2:
stack 1:
	name: type, src: LVAR
	name: b, src: LVAR
	name: a, src: LVAR
stack 0:
	name: swap, src: FUNC
	name: tem1, src: GVAR
	name: tem, src: GVAR
	name: burger, src: GVAR
	name: ham, src: GVAR
	name: food, src: STRUCT
------------------------------
[DEBUG] Finish Analysing Stmt.
[DEBUG] Finish Analysing DefList4LocalVar.
Search for Use: name: tem1, ns: 3
Search for Use: name: tem1, ns: 2
[DEBUG] Finish Analysing Exp.
Search for Use: name: price, ns: Field
Search for Use: name: a, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
Search for Use: name: price, ns: Field
Search for Use: name: a, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
Search for Use: name: price, ns: Field
Search for Use: name: b, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
Search for Use: name: price, ns: Field
Search for Use: name: b, ns: 3
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
Search for Use: name: tem1, ns: 3
Search for Use: name: tem1, ns: 2
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing CompSt.
Clear Stack Top
------------------------------
stack 2:
stack 1:
	name: type, src: LVAR
	name: b, src: LVAR
	name: a, src: LVAR
stack 0:
	name: swap, src: FUNC
	name: tem1, src: GVAR
	name: tem, src: GVAR
	name: burger, src: GVAR
	name: ham, src: GVAR
	name: food, src: STRUCT
------------------------------
[DEBUG] Finish Analysing Stmt.
[DEBUG] Finish Analysing Stmt.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing CompSt.
Clear Stack Top
------------------------------
stack 1:
stack 0:
	name: swap, src: FUNC
	name: tem1, src: GVAR
	name: tem, src: GVAR
	name: burger, src: GVAR
	name: ham, src: GVAR
	name: food, src: STRUCT
------------------------------
[DEBUG] Finish Analysing ExtDef.
[DEBUG] Finish Analysing FunDec.
Search for Insert: name: main, ns: 0
Insert Symbol: name: main
------------------------------
stack 1:
stack 0:
	name: main, src: FUNC
	name: swap, src: FUNC
	name: tem1, src: GVAR
	name: tem, src: GVAR
	name: burger, src: GVAR
	name: ham, src: GVAR
	name: food, src: STRUCT
------------------------------
[DEBUG] Finish Analysing DefList4LocalVar.
Search for Use: name: swap, ns: 0
Search for Use: name: ham, ns: 3
Search for Use: name: ham, ns: 2
[DEBUG] Finish Analysing Exp.
Search for Use: name: burger, ns: 3
Search for Use: name: burger, ns: 2
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Args.
[DEBUG] Finish Analysing Args.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
[DEBUG] Finish Analysing Exp.
[DEBUG] Finish Analysing Stmt.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing StmtList.
[DEBUG] Finish Analysing CompSt.
Clear Stack Top
------------------------------
stack 1:
stack 0:
	name: main, src: FUNC
	name: swap, src: FUNC
	name: tem1, src: GVAR
	name: tem, src: GVAR
	name: burger, src: GVAR
	name: ham, src: GVAR
	name: food, src: STRUCT
------------------------------
[DEBUG] Finish Analysing ExtDef.
[DEBUG] Finish Analysing ExtDefList.
[DEBUG] Finish Analysing ExtDefList.
[DEBUG] Finish Analysing ExtDefList.
[DEBUG] Finish Analysing ExtDefList.
[DEBUG] Finish Analysing ExtDefList.
[DEBUG] Finish Analysing ExtDefList.
[DEBUG] Finish Analysing Program.
